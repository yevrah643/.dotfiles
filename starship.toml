#format = """
#[╭─user───❯](bold blue) $username
#[┣─system─❯](bold yellow) $hostname
#[┣─project❯](bold red) $directory$rust$git_branch$git_status$package$golang$terraform$docker_context$python$docker_context$nodejs
#[╰─cmd────❯](bold green) 
#"""

# [hostname]
# ssh_only = true
# format = 'on [MacBook-Pro-14](bold yellow) '
# trim_at = "."
# disabled = true
#
# [localip]
# ssh_only = false
# format = "@[$localipv4](bold red) "
# disabled = true
#
# [docker_context]
# symbol = " "
# format = "via [$symbol$context]($style) "
# style = "blue bold"
# only_with_files = true
# detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
# detect_folders = []
# disabled = false
#
# [git_commit]
# commit_hash_length = 4
# tag_symbol = "🔖 "
#
# [git_status]
# conflicted = "🏳"
# ahead = "🏎💨"
# behind = "😰"
# diverged = "😵"
# up_to_date = "✓"
# untracked = "🤷"
# stashed = "📦"
# modified = "📝"
# staged = '[++\($count\)](green)'
# renamed = "👅"
# deleted = "🗑"
#
# [lua]
# format = "via [🌕 $version](bold blue) "
#
# [hg_branch]
# symbol = " "
#
# [java]
# symbol = " "
#
# # [julia]
# # symbol = " "
#
# [memory_usage]
# symbol = " "
#
# [nim]
# symbol = " "
#
# [nix_shell]
# symbol = " "
#
# [package]
# symbol = " "
#
# [perl]
# symbol = " "
#
# [php]
# symbol = " "
#
# [python]
# symbol = " "
# #pyenv_version_name = true
# format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
# style = "bold yellow"
# pyenv_prefix = "venv "
# python_binary = ["./venv/bin/python", "python", "python3", "python2"]
# detect_extensions = ["py"]
# version_format = "v${raw}"
#
# [ruby]
# symbol = " "
#
# [rust]
# symbol = " "
#
# [scala]
# symbol = " "
#
# [shlvl]
# symbol = " "
#
# [swift]
# symbol = "ﯣ "
#
# [nodejs]
# format = "via [ Node.js $version](bold green) "
# detect_files = ["package.json", ".node-version"]
# detect_folders = ["node_modules"]

[username]
style_user = "green bold"
style_root = "red bold"
format = "[$user]($style)🚀 "
disabled = false
show_always = true

[character]                            # The name of the module we are configuring is "character"
success_symbol = "[﬌](bold green)"     # The "success_symbol" segment is being set to "➜" with the color "bold green"
error_symbol = "[✗](bold red)"

# configure directory
[directory]
read_only = " "
truncation_length = 20
truncate_to_repo = true # truncates directory to root folder if in github repo
#style = "bold italic blue"

[cmd_duration]
min_time = 4
show_milliseconds = false
disabled = false
style = "bold italic red"

# Git theme config
[git_branch]
symbol = "🌱 "
truncation_length = 4
truncation_symbol = ""

[hg_branch]
symbol = " "

# [git_commit]
# commit_hash_length = 4
# tag_symbol = "🔖 "

[c]
format = "via [$symbol$name ]($style)"
detect_extensions =  ["c", "h", "cpp"]

[buf]
format = "via [$symbol]($style)"

[cmake]
format = "via [$symbol]($style)"

[cobol]
format = "via [$symbol]($style)"

[crystal]
format = "via [$symbol]($style)"

[daml]
format = "via [$symbol]($style)"

[dart]
format = "via [$symbol]($style)"

[deno]
format = "via [$symbol]($style)"

[dotnet]
format = "[$symbol(🎯 $tfm )]($style)"

[elixir]
format = 'via [$symbol]($style)'

[elm]
format = 'via [$symbol]($style)'

[erlang]
format = 'via [$symbol]($style)'

[golang]
format = 'via [$symbol]($style)'

[helm]
format = 'via [$symbol]($style)'

[julia]
format = 'via [$symbol]($style)'

[kotlin]
format = 'via [$symbol]($style)'

# [lua]
# format = 'via [$symbol]($style)'
[lua]
format = "via [🌕 $version](bold blue) "

[nim]
format = 'via [$symbol]($style)'

[nodejs]
format = 'via [$symbol]($style)'

[ocaml]
format = 'via [$symbol(\($switch_indicator$switch_name\) )]($style)'

[perl]
format = 'via [$symbol]($style)'

[php]
format = 'via [$symbol]($style)'

[pulumi]
format = 'via [$symbol$stack]($style)'

[purescript]
format = 'via [$symbol]($style)'

# [python]
# format = 'via [$symbol]($style)'

[python]
symbol = " "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[raku]
format = 'via [$symbol]($style)'

[red]
format = 'via [$symbol]($style)'

[rlang]
format = 'via [$symbol]($style)'

[ruby]
format = 'via [$symbol]($style)'

[rust]
format = 'via [$symbol]($style)'

[swift]
format = 'via [$symbol]($style)'

[vagrant]
format = 'via [$symbol]($style)'

[vlang]
format = 'via [$symbol]($style)'

[zig]
format = 'via [$symbol]($style)'
